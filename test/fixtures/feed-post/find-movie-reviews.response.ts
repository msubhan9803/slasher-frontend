import { SIMPLE_MONGODB_ID_REGEX } from '../../../src/constants';

export default [
  {
    _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    shareUsers: [],
    type: 1,
    privacyType: 1,
    shareId: null,
    vendorUrl: null,
    vendorTitle: null,
    mature: 0,
    sharedList: 0,
    likeCount: 0,
    skipthat: false,
    userId: {
      _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      userName: 'Username2',
      profilePic: 'http://localhost:4444/placeholders/default_user_icon.png',
    },
    movieId: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    message: 'Message 3',
    images: [
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
    ],
    hideUsers: [],
    status: 1,
    is_deleted: 0,
    rssfeedProviderId: null,
    commentCount: 0,
    likes: [],
    rssFeedId: null,
    postType: 3,
    title: null,
    spoilers: false,
    reportUsers: [],
    lastUpdateAt: expect.any(String),
    createdAt: expect.any(String),
    updatedAt: expect.any(String),
    __v: 0,
  },
  {
    _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    shareUsers: [],
    type: 1,
    privacyType: 1,
    shareId: null,
    vendorUrl: null,
    vendorTitle: null,
    mature: 0,
    sharedList: 0,
    likeCount: 0,
    skipthat: false,
    userId: {
      _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      userName: 'Username3',
      profilePic: 'http://localhost:4444/placeholders/default_user_icon.png',
    },
    movieId: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    message: 'Message 2',
    images: [
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
    ],
    hideUsers: [],
    status: 1,
    is_deleted: 0,
    rssfeedProviderId: null,
    commentCount: 0,
    likes: [],
    rssFeedId: null,
    postType: 3,
    title: null,
    spoilers: false,
    reportUsers: [],
    lastUpdateAt: expect.any(String),
    createdAt: expect.any(String),
    updatedAt: expect.any(String),
    __v: 0,
    reviewData: { rating: 4, goreFactorRating: 3, worthWatching: 1 },
  },
  {
    _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    shareUsers: [],
    type: 1,
    privacyType: 1,
    shareId: null,
    vendorUrl: null,
    vendorTitle: null,
    mature: 0,
    sharedList: 0,
    likeCount: 0,
    skipthat: false,
    userId: {
      _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      userName: 'Username1',
      profilePic: 'http://localhost:4444/placeholders/default_user_icon.png',
    },
    movieId: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
    message: 'Message 1',
    images: [
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
      {
        image_path: 'http://localhost:4444/api/v1/local-storage/feed/feed_sample1.jpg',
        _id: expect.stringMatching(SIMPLE_MONGODB_ID_REGEX),
      },
    ],
    hideUsers: [],
    status: 1,
    is_deleted: 0,
    rssfeedProviderId: null,
    commentCount: 0,
    likes: [],
    rssFeedId: null,
    postType: 3,
    title: null,
    spoilers: false,
    reportUsers: [],
    lastUpdateAt: expect.any(String),
    createdAt: expect.any(String),
    updatedAt: expect.any(String),
    __v: 0,
    reviewData: { rating: 4, goreFactorRating: 4, worthWatching: 1 },
  },
];
